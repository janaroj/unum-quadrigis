<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="POS" default="build">

	<!-- Definitions of variables used during the rest of this script -->

	<property file="build.properties" />
	<property name="build.dir" value="${basedir}/build" />
	<property name="build.classes.dir" value="${build.dir}/classes" />
	<property name="build.test.dir"       value="${build.dir}/test"/>
	<property name="src.dir" value="${basedir}/src" />
	<property name="prop.dir" value="${basedir}/prop" />
	<property name="dist.dir" value="${build.dir}/jar" />
	<property name="doc.dir" value="${build.dir}/doc" />
	<property name="test.reports.dir" value="${build.dir}/reports/" />
	<property name="lib.dir" value="${basedir}/lib"/>
	<property name="conf.dir" value="${basedir}/conf"/>
	
	<!-- database variables -->
	<property name="data.dir"	value="${basedir}/data"/>
	<property name="db.file"	value="${data.dir}/POSdb"/>
	<property name="db.alias"	value="POS"/>
	<property name="db.url" 	value="jdbc:hsqldb:hsql://localhost/POS"/>
	<property name="lib.hibernate.dir"   value="${lib.dir}/hibernate"/>
	
	<!-- Source -->
	<property name="src.dir"    value="${basedir}/src"/>
	<property name="test.dir"   value="${basedir}/test"/>

	
	<!-- Definitions of classpath variants used for different tasks -->

	<path id="compile.classpath">
		  <fileset dir="${lib.dir}">
		            <include name="*.jar"/>
		        </fileset>
		<fileset dir="${lib.hibernate.dir}">
		             <include name="*.jar"/>
		        </fileset>
	</path>

	
	<path id="run.classpath">
	        <pathelement location="${build.classes.dir}"/>
	        <!-- configuration -->
	        <pathelement location="${conf.dir}"/>
	        <fileset dir="${lib.dir}">
	            <include name="*.jar"/>
	        </fileset>

	        <fileset dir="${lib.hibernate.dir}">
	             <include name="*.jar"/>
	        </fileset>
	</path>

	<path id="test-classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar"/>
		</fileset>
	    <pathelement path="${build.classes.dir}/" />
		<pathelement path="${build.test.dir}/" />
	</path>
	
	<path id="libs">
		<fileset dir="${lib.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>
	
	
	<!-- Definitions of runnable ant targets.
         Run them from the command line by executing "ant [targetname]"  -->

	<!-- Run the application -->
	<target name="run" depends="build" description="Run the application">
		<java classname="ee.ut.math.tvt.unum_quadrigis.Intro" classpathref="run.classpath" fork="yes">
			<jvmarg value="-Xdebug" />
			<jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=1044" />
		</java>
	</target>

	<!-- Build the system -->
	<target name="build" description="Build the system">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.classes.dir}" />
		<javac srcdir="${src.dir}" destdir="${build.classes.dir}" debug="true" debuglevel="lines,vars,source" encoding="utf-8" compiler="modern" target="1.7" source="1.7" includeantruntime="false">
			<classpath refid="compile.classpath" />
		</javac>

	</target>


	<!-- Clean up build system results -->
	<target name="clean" description="Clean up build system results">
		<delete dir="${build.dir}" />
	</target>

	<!-- Export .jar file from /build PS! for revisions  -->
	<target name="dist-revision" depends="build" description="Export .jar file from /build">
		<mkdir dir="${dist.dir}" />
		<copy todir="${dist.dir}">
			<fileset dir="." includes="lib/*.jar prop/*.properties res/" />
		</copy>
		<jar destfile="${dist.dir}/Unum_Quadrigis.jar" basedir="${build.dir}/classes">
			<manifest>
				<attribute name="Main-Class" value="ee.ut.math.tvt.unum_quadrigis.Intro" />
				<attribute name="Class-Path" value=". lib/log4j-1.2.17.jar ./prop/" />
			</manifest>
			<fileset dir="${basedir}">
				<include name="prop/*" />
			</fileset>

			<fileset dir="${basedir}">
				<include name="lib/*" />
			</fileset>

			<fileset dir="${basedir}">
				<include name="res/*" />
			</fileset>
		</jar>
		<propertyfile file="${prop.dir}/version.properties">
			<entry key="build.revision.number" type="int" operation="+" value="1" pattern="00" />
		</propertyfile>

		<property file="${prop.dir}/version.properties" />

		<propertyfile file="${prop.dir}/version.properties">
			<entry key="build.number" value="${build.major.number}.${build.minor.number}.${build.revision.number}" />
		</propertyfile>
	</target>

	<!-- Export .jar file from /build PS! for minor updates  -->
	<target name="dist-minor" depends="build" description="Export .jar file from /build">
		<mkdir dir="${dist.dir}" />
		<copy todir="${dist.dir}">
			<fileset dir="." includes="lib/*.jar prop/*.properties res/" />
		</copy>
		<jar destfile="${dist.dir}/Unum_Quadrigis.jar" basedir="${build.dir}/classes">
			<manifest>
				<attribute name="Main-Class" value="ee.ut.math.tvt.unum_quadrigis.Intro" />
				<attribute name="Class-Path" value=". lib/log4j-1.2.17.jar ./prop/" />
			</manifest>
			<fileset dir="${basedir}">
				<include name="prop/*" />
			</fileset>

			<fileset dir="${basedir}">
				<include name="lib/*" />
			</fileset>

			<fileset dir="${basedir}">
				<include name="res/*" />
			</fileset>
		</jar>
		<propertyfile file="${prop.dir}/version.properties">
			<entry key="build.minor.number" type="int" operation="+" value="1" pattern="0" />
		</propertyfile>

		<property file="${prop.dir}/version.properties" />

		<propertyfile file="${prop.dir}/version.properties">
			<entry key="build.number" value="${build.major.number}.${build.minor.number}.${build.revision.number}" />
		</propertyfile>
	</target>

	<!-- Export .jar file from /build PS! for major updates  -->
	<target name="dist-major" depends="build" description="Export .jar file from /build">
		<mkdir dir="${dist.dir}" />
		<copy todir="${dist.dir}">
			<fileset dir="." includes="lib/*.jar prop/*.properties res/" />
		</copy>
		<jar destfile="${dist.dir}/Unum_Quadrigis.jar" basedir="${build.dir}/classes">
			<manifest>
				<attribute name="Main-Class" value="ee.ut.math.tvt.unum_quadrigis.Intro" />
				<attribute name="Class-Path" value=". lib/log4j-1.2.17.jar ./prop/" />
			</manifest>
			<fileset dir="${basedir}">
				<include name="prop/*" />
			</fileset>

			<fileset dir="${basedir}">
				<include name="lib/*" />
			</fileset>

			<fileset dir="${basedir}">
				<include name="res/*" />
			</fileset>
		</jar>
		<propertyfile file="${prop.dir}/version.properties">
			<entry key="build.major.number" type="int" operation="+" value="1" pattern="0" />
		</propertyfile>

		<property file="${prop.dir}/version.properties" />

		<propertyfile file="${prop.dir}/version.properties">
			<entry key="build.number" value="${build.major.number}.${build.minor.number}.${build.revision.number}" />
		</propertyfile>
	</target>

	<!-- Run .jar file created with 'dist'  -->
	<target name="jrun" depends="dist-revision" description="Run .jar file created with 'dist'">
		<java jar="${dist.dir}/Unum_Quadrigis.jar" fork="true" />
	</target>

	<target name="runc" depends="build" description="Run the application (console)">
		<java classname="ee.ut.math.tvt.unum_quadrigis.Intro" classpathref="run.classpath" fork="yes">
			<arg value="console" />
		</java>
	</target>
	<target name="git_commit" description="add, commit, push">
		<input message="Tag message: " addproperty="git.commit.message" />
		<input message="Username:Password" addproperty="git.userinfo" />
		<exec executable="git">
			<arg value="add" />
			<arg value="-A" />
		</exec>
		<exec executable="git">
			<arg value="commit" />
			<arg value="-m" />
			<arg value="${git.commit.message}" />
		</exec>
		<exec executable="git">
			<arg value="pull" />
		</exec>
		<exec executable="git">
			<arg value="push" />
			<arg value="https://${git.userinfo}@github.com/marekpagel/unum-quadrigis.git" />
		</exec>

	</target>
	<target name="git_tag" description="add and push a tag">
		<input message="Tagname: " addproperty="git.tag.name" />
		<input message="Tag message" addproperty="git.tag.message" />
		<exec executable="git">
			<arg value="tag" />
			<arg value="-a" />
			<arg value="${git.tag.name}" />
			<arg value="-m" />
			<arg value='"${git.tag.message}"' />
		</exec>
		<exec executable="git">
			<arg value="push" />
			<arg value="--tags" />
		</exec>
	</target>
	<target name="dbmanager" description="Start the HSQLDB manager">
	        <java
	            classname="org.hsqldb.util.DatabaseManagerSwing"
	            classpathref="run.classpath"
	            fork="yes"
	        >
	            <arg line="--user sa --url ${db.url}" />
	        </java>
	    </target>

	    <target name="startdb" description="Start the HSQLDB with the default params">
	        <java
	            classname="org.hsqldb.Server"
	            classpathref="run.classpath"
	            fork="yes"
	        >
	            <arg line="-database.0 '${db.file}' -dbname.0 '${db.alias}'" /> 
	        </java>
	</target>

	<target name="build-tests" depends="build" description="Build the system">
			<javac
	            srcdir="${test.dir}"
	            destdir="${build.test.dir}"
	            debug="true"
	            debuglevel="lines,vars,source"
	            encoding="utf-8"
	            compiler="modern"
	            target="1.5"
	            source="1.5"
	        	classpathref="libs"
	        >
				<classpath>
					<pathelement path="${build.classes.dir}" />
				</classpath>
			</javac>
		</target>
	
	<target name="test" depends="build-tests" description="Run the template application">

			<junit>
				<classpath refid="test-classpath" />

				<formatter type="brief" usefile="false" />
				<batchtest>
					<fileset dir="${build.test.dir}" includes="**/*.class" />
				</batchtest>
			</junit>


		</target>
	
</project>

